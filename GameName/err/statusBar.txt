F00:0001       	idnt	"src/statusBar.c"
F00:0002       	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
F00:0003       	section	"CODE",code
F00:0004       	public	_initStatusBar
F00:0005       	cnop	0,4
F00:0006       _initStatusBar
F00:0007       	link.w	a5,#0
               S01:00000000:  4E 55 00 00
F00:0008       	movem.l	l27,-(a7)
               S01:00000004:  48 E7 3F 20
F00:0009       	move.l	#78+_statusBarBuffer,d6
               S01:00000008:  2C 3C 00 00 00 5A [R]
F00:0010       	moveq	#49,d5
               S01:0000000E:  7A 31
F00:0011       	move.l	#64+_statusBarBuffer,d4
               S01:00000010:  28 3C 00 00 00 4C [R]
F00:0012       	moveq	#6,d3
               S01:00000016:  76 06
F00:0013       	moveq	#8,d2
               S01:00000018:  74 08
F00:0014       	move.l	#0,_score
               S01:0000001A:  42 B9 00 00 00 00 [R]
F00:0015       	move.b	#6,_health
               S01:00000020:  13 FC 00 06 00 00 00 04 [R]
F00:0016       	move.b	#1,_runUpdateStatusBar
               S01:00000028:  13 FC 00 01 00 00 00 08 [R]
F00:0017       	pea	_scoreString
               S01:00000030:  48 79 00 00 00 00 [R]
F00:0018       	jsr	_strlen
               S01:00000036:  4E B9 00 00 00 00 [R]
F00:0019       	move.l	d0,a2
               S01:0000003C:  24 40
F00:0020       	moveq	#0,d1
               S01:0000003E:  72 00
F00:0021       	move.l	d1,a0
               S01:00000040:  20 41
F00:0022       	addq.w	#4,a7
               S01:00000042:  58 4F
F00:0023       	cmp.l	a0,a2
               S01:00000044:  B5 C8
F00:0024       	bls	l23
               S01:00000046:  63 22
F00:0025       l19
F00:0026       	lea	_scoreString,a1
               S01:00000048:  43 F9 00 00 00 00 [R]
F00:0027       	move.l	d1,d0
               S01:0000004E:  20 01
F00:0028       	lsl.l	#1,d0
               S01:00000050:  D0 80
F00:0029       	lea	_statusBarBuffer,a0
               S01:00000052:  41 F9 00 00 00 0C [R]
F00:0030       	move.b	(0,a1,d1.l),d7
               S01:00000058:  1E 31 18 00
F00:0031       	ext.w	d7
               S01:0000005C:  48 87
F00:0032       	move.w	d7,(0,a0,d0.l)
               S01:0000005E:  31 87 08 00
F00:0033       	addq.l	#1,d1
               S01:00000062:  52 81
F00:0034       	move.l	d1,a0
               S01:00000064:  20 41
F00:0035       	cmp.l	a0,a2
               S01:00000066:  B5 C8
F00:0036       	bhi	l19
               S01:00000068:  62 DE
F00:0037       l23
F00:0038       	pea	_healthString
               S01:0000006A:  48 79 00 00 00 08 [R]
F00:0039       	jsr	_strlen
               S01:00000070:  4E B9 00 00 00 00 [R]
F00:0040       	move.l	d0,a2
               S01:00000076:  24 40
F00:0041       	moveq	#0,d1
               S01:00000078:  72 00
F00:0042       	move.l	d1,a0
               S01:0000007A:  20 41
F00:0043       	addq.w	#4,a7
               S01:0000007C:  58 4F
F00:0044       	cmp.l	a0,a2
               S01:0000007E:  B5 C8
F00:0045       	bls	l24
               S01:00000080:  63 1E
F00:0046       l20
F00:0047       	lea	_healthString,a1
               S01:00000082:  43 F9 00 00 00 08 [R]
F00:0048       	move.l	d1,d0
               S01:00000088:  20 01
F00:0049       	lsl.l	#1,d0
               S01:0000008A:  D0 80
F00:0050       	move.l	d4,a0
               S01:0000008C:  20 44
F00:0051       	move.b	(0,a1,d1.l),d7
               S01:0000008E:  1E 31 18 00
F00:0052       	ext.w	d7
               S01:00000092:  48 87
F00:0053       	move.w	d7,(0,a0,d0.l)
               S01:00000094:  31 87 08 00
F00:0054       	addq.l	#1,d1
               S01:00000098:  52 81
F00:0055       	move.l	d1,a0
               S01:0000009A:  20 41
F00:0056       	cmp.l	a0,a2
               S01:0000009C:  B5 C8
F00:0057       	bhi	l20
               S01:0000009E:  62 E2
F00:0058       l24
F00:0059       	moveq	#0,d1
               S01:000000A0:  72 00
F00:0060       	cmp.l	d1,d2
               S01:000000A2:  B4 81
F00:0061       	ble	l25
               S01:000000A4:  6F 18
F00:0062       	move.l	#12+_statusBarBuffer,d4
               S01:000000A6:  28 3C 00 00 00 18 [R]
F00:0063       	moveq	#48,d3
               S01:000000AC:  76 30
F00:0064       l11
F00:0065       	move.l	d1,d0
               S01:000000AE:  20 01
F00:0066       	lsl.l	#1,d0
               S01:000000B0:  D0 80
F00:0067       	move.l	d4,a0
               S01:000000B2:  20 44
F00:0068       	move.w	d3,(0,a0,d0.l)
               S01:000000B4:  31 83 08 00
F00:0069       	addq.l	#1,d1
               S01:000000B8:  52 81
F00:0070       	cmp.l	d1,d2
               S01:000000BA:  B4 81
F00:0071       	bgt	l11
               S01:000000BC:  6E F0
F00:0072       l25
F00:0073       	move.l	#64+_statusBarBuffer,d4
               S01:000000BE:  28 3C 00 00 00 4C [R]
F00:0074       	moveq	#6,d3
               S01:000000C4:  76 06
F00:0075       	moveq	#0,d1
               S01:000000C6:  72 00
F00:0076       	cmp.l	d1,d3
               S01:000000C8:  B6 81
F00:0077       	ble	l26
               S01:000000CA:  6F 10
F00:0078       l22
F00:0079       	move.l	d1,d0
               S01:000000CC:  20 01
F00:0080       	lsl.l	#1,d0
               S01:000000CE:  D0 80
F00:0081       	move.l	d6,a0
               S01:000000D0:  20 46
F00:0082       	move.w	d5,(0,a0,d0.l)
               S01:000000D2:  31 85 08 00
F00:0083       	addq.l	#1,d1
               S01:000000D6:  52 81
F00:0084       	cmp.l	d1,d3
               S01:000000D8:  B6 81
F00:0085       	bgt	l22
               S01:000000DA:  6E F0
F00:0086       l26
F00:0087       l27	reg	a2/d2/d3/d4/d5/d6/d7
F00:0088       	movem.l	(a7)+,a2/d2/d3/d4/d5/d6/d7
               S01:000000DC:  4C DF 04 FC
F00:0089       	unlk	a5
               S01:000000E0:  4E 5D
F00:0090       	rts
               S01:000000E2:  4E 75
F00:0091       	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
F00:0092       	public	_updateStatusBar
F00:0093       	cnop	0,4
F00:0094       _updateStatusBar
F00:0095       	link.w	a5,#0
               S01:000000E4:  4E 55 00 00
F00:0096       	movem.l	l48,-(a7)
               S01:000000E8:  48 E7 3F 20
F00:0097       	move.l	#12+_statusBarBuffer,d6
               S01:000000EC:  2C 3C 00 00 00 18 [R]
F00:0098       	moveq	#8,d5
               S01:000000F2:  7A 08
F00:0099       	moveq	#6,d4
               S01:000000F4:  78 06
F00:0100       	tst.b	_runUpdateStatusBar
               S01:000000F6:  4A 39 00 00 00 08 [R]
F00:0101       	beq	l33
               S01:000000FC:  67 7E
F00:0102       	moveq	#0,d1
               S01:000000FE:  72 00
F00:0103       	moveq	#1,d0
               S01:00000100:  70 01
F00:0104       	moveq	#0,d2
               S01:00000102:  74 00
F00:0105       	cmp.l	d2,d5
               S01:00000104:  BA 82
F00:0106       	bls	l46
               S01:00000106:  63 42
F00:0107       	moveq	#9,d4
               S01:00000108:  78 09
F00:0108       	move.l	#28,a2
               S01:0000010A:  34 7C 00 1C
F00:0109       	move.l	#48,a1
               S01:0000010E:  32 7C 00 30
F00:0110       l34
F00:0111       	move.l	d2,d0
               S01:00000112:  20 02
F00:0112       	lsl.l	#2,d0
               S01:00000114:  E5 88
F00:0113       	neg.l	d0
               S01:00000116:  44 80
F00:0114       	add.l	a2,d0
               S01:00000118:  D0 8A
F00:0115       	move.l	_score,d7
               S01:0000011A:  2E 39 00 00 00 00 [R]
F00:0116       	lsr.l	d0,d7
               S01:00000120:  E0 AF
F00:0117       	move.l	d7,d0
               S01:00000122:  20 07
F00:0118       	and.b	#15,d0
               S01:00000124:  C0 3C 00 0F
F00:0119       	and.w	#255,d0
               S01:00000128:  C0 7C 00 FF
F00:0120       	moveq	#0,d3
               S01:0000012C:  76 00
F00:0121       	move.w	d0,d3
               S01:0000012E:  36 00
F00:0122       	cmp.l	d3,d4
               S01:00000130:  B8 83
F00:0123       	bcc	l39
               S01:00000132:  64 02
F00:0124       	addq.l	#7,d3
               S01:00000134:  5E 83
F00:0125       l39
F00:0126       	move.l	d3,d0
               S01:00000136:  20 03
F00:0127       	add.l	a1,d0
               S01:00000138:  D0 89
F00:0128       	move.l	d2,d1
               S01:0000013A:  22 02
F00:0129       	lsl.l	#1,d1
               S01:0000013C:  D2 81
F00:0130       	move.l	d6,a0
               S01:0000013E:  20 46
F00:0131       	move.w	d0,(0,a0,d1.l)
               S01:00000140:  31 80 18 00
F00:0132       	addq.l	#1,d2
               S01:00000144:  52 82
F00:0133       	cmp.l	d2,d5
               S01:00000146:  BA 82
F00:0134       	bhi	l34
               S01:00000148:  62 C8
F00:0135       l46
F00:0136       	moveq	#6,d4
               S01:0000014A:  78 06
F00:0137       	moveq	#0,d2
               S01:0000014C:  74 00
F00:0138       	cmp.l	d2,d4
               S01:0000014E:  B8 82
F00:0139       	bls	l47
               S01:00000150:  63 06
F00:0140       l45
F00:0141       	addq.l	#1,d2
               S01:00000152:  52 82
F00:0142       	cmp.l	d2,d4
               S01:00000154:  B8 82
F00:0143       	bhi	l45
               S01:00000156:  62 FA
F00:0144       l47
F00:0145       	move.l	#2,-(a7)
               S01:00000158:  48 78 00 02
F00:0146       	pea	_statusBarBuffer
               S01:0000015C:  48 79 00 00 00 0C [R]
F00:0147       	move.l	#128,-(a7)
               S01:00000162:  48 78 00 80
F00:0148       	move.l	#45056,-(a7)
               S01:00000166:  48 79 00 00 B0 00
F00:0149       	jsr	_DMA_MemoryToVram
               S01:0000016C:  4E B9 00 00 00 00 [R]
F00:0150       	move.b	#0,_runUpdateStatusBar
               S01:00000172:  42 39 00 00 00 08 [R]
F00:0151       	add.w	#16,a7
               S01:00000178:  4F EF 00 10
F00:0152       l33
F00:0153       l48	reg	a2/d2/d3/d4/d5/d6/d7
F00:0154       	movem.l	(a7)+,a2/d2/d3/d4/d5/d6/d7
               S01:0000017C:  4C DF 04 FC
F00:0155       	unlk	a5
               S01:00000180:  4E 5D
F00:0156       	rts
               S01:00000182:  4E 75
F00:0157       	public	_scoreString
F00:0158       	section	"DATA",data
F00:0159       	cnop	0,4
F00:0160       _scoreString
F00:0161       	dc.b	83
               S02:00000000:  53
F00:0162       	dc.b	67
               S02:00000001:  43
F00:0163       	dc.b	79
               S02:00000002:  4F
F00:0164       	dc.b	82
               S02:00000003:  52
F00:0165       	dc.b	69
               S02:00000004:  45
F00:0166       	dc.b	58
               S02:00000005:  3A
F00:0167       	dc.b	0
               S02:00000006:  00
F00:0168       	public	_healthString
F00:0169       	cnop	0,4
F00:0170       _healthString
F00:0171       	dc.b	72
               S02:00000008:  48
F00:0172       	dc.b	69
               S02:00000009:  45
F00:0173       	dc.b	65
               S02:0000000A:  41
F00:0174       	dc.b	76
               S02:0000000B:  4C
F00:0175       	dc.b	84
               S02:0000000C:  54
F00:0176       	dc.b	72
               S02:0000000D:  48
F00:0177       	dc.b	58
               S02:0000000E:  3A
F00:0178       	dc.b	0
               S02:0000000F:  00
F00:0179       	public	_strlen
F00:0180       	public	_DMA_MemoryToVram
F00:0181       	public	_score
F00:0182       	section	"BSS",bss
F00:0183       	cnop	0,4
F00:0184       _score
F00:0185       	ds.b	4
F00:0186       	public	_health
F00:0187       	cnop	0,4
F00:0188       _health
F00:0189       	ds.b	1
F00:0190       	public	_runUpdateStatusBar
F00:0191       	cnop	0,4
F00:0192       _runUpdateStatusBar
F00:0193       	ds.b	1
F00:0194       	public	_statusBarBuffer
F00:0195       	cnop	0,4
F00:0196       _statusBarBuffer
F00:0197       	ds.b	128
F00:0198       


Sections:
S01  CODE
S02  DATA
S03  BSS


Sources:
F00  statusBar.asm


Symbols:
_DMA_MemoryToVram IMP EXPORT REF 
l45 LAB (0x152) sec=CODE 
l47 LAB (0x158) sec=CODE 
l39 LAB (0x136) sec=CODE 
l34 LAB (0x112) sec=CODE 
l46 LAB (0x14a) sec=CODE 
l33 LAB (0x17c) sec=CODE 
l48 EXPR(1276=0x4fc) EQU REGL 
_updateStatusBar LAB (0xe4) UNUSED EXPORT sec=CODE 
l22 LAB (0xcc) sec=CODE 
l26 LAB (0xdc) sec=CODE 
l11 LAB (0xae) sec=CODE 
l25 LAB (0xbe) sec=CODE 
l20 LAB (0x82) sec=CODE 
l24 LAB (0xa0) sec=CODE 
_healthString LAB (0x8) EXPORT REF sec=DATA 
l19 LAB (0x48) sec=CODE 
l23 LAB (0x6a) sec=CODE 
_strlen IMP EXPORT REF 
_scoreString LAB (0x0) EXPORT REF sec=DATA 
_runUpdateStatusBar LAB (0x8) EXPORT REF sec=BSS 
_health LAB (0x4) EXPORT REF sec=BSS 
_score LAB (0x0) EXPORT REF sec=BSS 
_statusBarBuffer LAB (0xc) EXPORT REF sec=BSS 
l27 EXPR(1276=0x4fc) EQU REGL 
_initStatusBar LAB (0x0) UNUSED EXPORT sec=CODE 
_MOVEMBYTES EXPR(28=0x1c) INTERNAL 
 MOVEMSIZE EXPR(4=0x4) INTERNAL 
_MOVEMREGS EXPR(1276=0x4fc) INTERNAL 
__LINE__ EXPR(198=0xc6) INTERNAL 
__FO EXPR(0=0x0) INTERNAL 
__RS EXPR(0=0x0) INTERNAL 
REPTN EXPR(-1=0xffffffff) INTERNAL 
__VASM EXPR(1=0x1) INTERNAL 
__UNIXFS EXPR(0=0x0) INTERNAL 

There have been no errors.
