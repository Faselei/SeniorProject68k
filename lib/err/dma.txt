F00:0001       	idnt	"src/dma.c"
F00:0002       	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
F00:0003       	section	"CODE",code
F00:0004       	public	_DMA_MemoryToVram
F00:0005       	cnop	0,4
F00:0006       _DMA_MemoryToVram
F00:0007       	link.w	a5,#0
               S01:00000000:  4E 55 00 00
F00:0008       	movem.l	l3,-(a7)
               S01:00000004:  2F 0A
F00:0009       	move.b	#0,_processDMAQueue
               S01:00000006:  42 39 00 00 00 04 [R]
F00:0010       	moveq	#0,d0
               S01:0000000C:  70 00
F00:0011       	move.b	_queueIndex,d0
               S01:0000000E:  10 39 00 00 00 00 [R]
F00:0012       	lsl.l	#4,d0
               S01:00000014:  E9 88
F00:0013       	lea	_queueArea,a2
               S01:00000016:  45 F9 00 00 00 08 [R]
F00:0014       	add.l	d0,a2
               S01:0000001C:  D5 C0
F00:0015       	move.l	#0,(a2)
               S01:0000001E:  42 92
F00:0016       	move.b	(23,a5),(4,a2)
               S01:00000020:  15 6D 00 17 00 04
F00:0017       	moveq	#0,d0
               S01:00000026:  70 00
F00:0018       	move.w	(14,a5),d0
               S01:00000028:  30 2D 00 0E
F00:0019       	tst.l	d0
               S01:0000002C:  4A 80
F00:0020       	bge	l6
               S01:0000002E:  6C 02
F00:0021       	addq.l	#1,d0
               S01:00000030:  52 80
F00:0022       l6:
F00:0023       	asr.l	#1,d0
               S01:00000032:  E2 80
F00:0024       	move.w	d0,(10,a2)
               S01:00000034:  35 40 00 0A
F00:0025       	move.l	#1073741952,-(a7)
               S01:00000038:  48 79 40 00 00 80
F00:0026       	moveq	#0,d0
               S01:0000003E:  70 00
F00:0027       	move.w	(10,a5),d0
               S01:00000040:  30 2D 00 0A
F00:0028       	move.l	d0,a0
               S01:00000044:  20 40
F00:0029       	move.l	a0,-(a7)
               S01:00000046:  2F 08
F00:0030       	jsr	_VDP_WriteCommand
               S01:00000048:  4E B9 00 00 00 00 [R]
F00:0031       	move.l	d0,(6,a2)
               S01:0000004E:  25 40 00 06
F00:0032       	move.l	(16,a5),d0
               S01:00000052:  20 2D 00 10
F00:0033       	lsr.l	#1,d0
               S01:00000056:  E2 88
F00:0034       	and.l	#16777215,d0
               S01:00000058:  C0 BC 00 FF FF FF
F00:0035       	move.l	d0,(12,a2)
               S01:0000005E:  25 40 00 0C
F00:0036       	addq.b	#1,_queueIndex
               S01:00000062:  52 39 00 00 00 00 [R]
F00:0037       	move.b	#1,_processDMAQueue
               S01:00000068:  13 FC 00 01 00 00 00 04 [R]
F00:0038       	addq.w	#8,a7
               S01:00000070:  50 4F
F00:0039       l3	reg	a2
F00:0040       	movem.l	(a7)+,a2
               S01:00000072:  24 5F
F00:0041       	unlk	a5
               S01:00000074:  4E 5D
F00:0042       	rts
               S01:00000076:  4E 75
F00:0043       	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
F00:0044       	public	_DMA_VramFill
F00:0045       	cnop	0,4
F00:0046       _DMA_VramFill
F00:0047       	link.w	a5,#0
               S01:00000078:  4E 55 00 00
F00:0048       	movem.l	l9,-(a7)
               S01:0000007C:  2F 0A
F00:0049       	move.b	#0,_processDMAQueue
               S01:0000007E:  42 39 00 00 00 04 [R]
F00:0050       	moveq	#0,d0
               S01:00000084:  70 00
F00:0051       	move.b	_queueIndex,d0
               S01:00000086:  10 39 00 00 00 00 [R]
F00:0052       	lsl.l	#4,d0
               S01:0000008C:  E9 88
F00:0053       	lea	_queueArea,a2
               S01:0000008E:  45 F9 00 00 00 08 [R]
F00:0054       	add.l	d0,a2
               S01:00000094:  D5 C0
F00:0055       	moveq	#1,d0
               S01:00000096:  70 01
F00:0056       	move.l	d0,(a2)
               S01:00000098:  24 80
F00:0057       	move.b	(23,a5),(4,a2)
               S01:0000009A:  15 6D 00 17 00 04
F00:0058       	move.w	(14,a5),d0
               S01:000000A0:  30 2D 00 0E
F00:0059       	subq.w	#1,d0
               S01:000000A4:  53 40
F00:0060       	move.w	d0,(10,a2)
               S01:000000A6:  35 40 00 0A
F00:0061       	move.l	#1073741952,-(a7)
               S01:000000AA:  48 79 40 00 00 80
F00:0062       	moveq	#0,d0
               S01:000000B0:  70 00
F00:0063       	move.w	(10,a5),d0
               S01:000000B2:  30 2D 00 0A
F00:0064       	move.l	d0,a0
               S01:000000B6:  20 40
F00:0065       	move.l	a0,-(a7)
               S01:000000B8:  2F 08
F00:0066       	jsr	_VDP_WriteCommand
               S01:000000BA:  4E B9 00 00 00 00 [R]
F00:0067       	move.l	d0,(6,a2)
               S01:000000C0:  25 40 00 06
F00:0068       	move.b	(19,a5),(12,a2)
               S01:000000C4:  15 6D 00 13 00 0C
F00:0069       	addq.b	#1,_queueIndex
               S01:000000CA:  52 39 00 00 00 00 [R]
F00:0070       	move.b	#1,_processDMAQueue
               S01:000000D0:  13 FC 00 01 00 00 00 04 [R]
F00:0071       	addq.w	#8,a7
               S01:000000D8:  50 4F
F00:0072       l9	reg	a2
F00:0073       	movem.l	(a7)+,a2
               S01:000000DA:  24 5F
F00:0074       	unlk	a5
               S01:000000DC:  4E 5D
F00:0075       	rts
               S01:000000DE:  4E 75
F00:0076       	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
F00:0077       	public	_DMA_VramCopy
F00:0078       	cnop	0,4
F00:0079       _DMA_VramCopy
F00:0080       	link.w	a5,#0
               S01:000000E0:  4E 55 00 00
F00:0081       	movem.l	l14,-(a7)
               S01:000000E4:  2F 0A
F00:0082       	move.b	#0,_processDMAQueue
               S01:000000E6:  42 39 00 00 00 04 [R]
F00:0083       	moveq	#0,d0
               S01:000000EC:  70 00
F00:0084       	move.b	_queueIndex,d0
               S01:000000EE:  10 39 00 00 00 00 [R]
F00:0085       	lsl.l	#4,d0
               S01:000000F4:  E9 88
F00:0086       	lea	_queueArea,a2
               S01:000000F6:  45 F9 00 00 00 08 [R]
F00:0087       	add.l	d0,a2
               S01:000000FC:  D5 C0
F00:0088       	moveq	#2,d0
               S01:000000FE:  70 02
F00:0089       	move.l	d0,(a2)
               S01:00000100:  24 80
F00:0090       	move.b	(23,a5),(4,a2)
               S01:00000102:  15 6D 00 17 00 04
F00:0091       	move.w	(14,a5),(10,a2)
               S01:00000108:  35 6D 00 0E 00 0A
F00:0092       	move.l	#1073742016,-(a7)
               S01:0000010E:  48 79 40 00 00 C0
F00:0093       	moveq	#0,d0
               S01:00000114:  70 00
F00:0094       	move.w	(10,a5),d0
               S01:00000116:  30 2D 00 0A
F00:0095       	move.l	d0,a0
               S01:0000011A:  20 40
F00:0096       	move.l	a0,-(a7)
               S01:0000011C:  2F 08
F00:0097       	jsr	_VDP_WriteCommand
               S01:0000011E:  4E B9 00 00 00 00 [R]
F00:0098       	move.l	d0,(6,a2)
               S01:00000124:  25 40 00 06
F00:0099       	move.w	(18,a5),(12,a2)
               S01:00000128:  35 6D 00 12 00 0C
F00:0100       	addq.b	#1,_queueIndex
               S01:0000012E:  52 39 00 00 00 00 [R]
F00:0101       	move.b	#1,_processDMAQueue
               S01:00000134:  13 FC 00 01 00 00 00 04 [R]
F00:0102       	addq.w	#8,a7
               S01:0000013C:  50 4F
F00:0103       l14	reg	a2
F00:0104       	movem.l	(a7)+,a2
               S01:0000013E:  24 5F
F00:0105       	unlk	a5
               S01:00000140:  4E 5D
F00:0106       	rts
               S01:00000142:  4E 75
F00:0107       	public	_VDP_WriteCommand
F00:0108       	public	_queueIndex
F00:0109       	section	"BSS",bss
F00:0110       	cnop	0,4
F00:0111       _queueIndex
F00:0112       	ds.b	1
F00:0113       	public	_processDMAQueue
F00:0114       	cnop	0,4
F00:0115       _processDMAQueue
F00:0116       	ds.b	1
F00:0117       	public	_queueArea
F00:0118       	cnop	0,4
F00:0119       _queueArea
F00:0120       	ds.b	384
F00:0121       


Sections:
S01  CODE
S02  BSS


Sources:
F00  dma.asm


Symbols:
l14 EXPR(1024=0x400) EQU REGL 
_DMA_VramCopy LAB (0xe0) UNUSED EXPORT sec=CODE 
l9 EXPR(1024=0x400) EQU REGL 
_DMA_VramFill LAB (0x78) UNUSED EXPORT sec=CODE 
_VDP_WriteCommand IMP EXPORT REF 
l6 LAB (0x32) sec=CODE 
_queueArea LAB (0x8) EXPORT REF sec=BSS 
_queueIndex LAB (0x0) EXPORT REF sec=BSS 
_processDMAQueue LAB (0x4) EXPORT REF sec=BSS 
l3 EXPR(1024=0x400) EQU REGL 
_DMA_MemoryToVram LAB (0x0) UNUSED EXPORT sec=CODE 
_MOVEMBYTES EXPR(4=0x4) INTERNAL 
 MOVEMSIZE EXPR(4=0x4) INTERNAL 
_MOVEMREGS EXPR(1024=0x400) INTERNAL 
__LINE__ EXPR(121=0x79) INTERNAL 
__FO EXPR(0=0x0) INTERNAL 
__RS EXPR(0=0x0) INTERNAL 
REPTN EXPR(-1=0xffffffff) INTERNAL 
__VASM EXPR(1=0x1) INTERNAL 
__UNIXFS EXPR(0=0x0) INTERNAL 

There have been no errors.
